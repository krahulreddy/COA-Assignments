$date
	Mon Oct 15 22:04:52 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module main $end
$var wire 1 ! sum $end
$var wire 1 " carry $end
$var reg 4 # n1 [3:0] $end
$var reg 4 $ n2 [3:0] $end
$var reg 4 % n3 [3:0] $end
$var reg 1 & op1 $end
$var reg 1 ' op2 $end
$var reg 1 ( op3 $end
$var integer 32 ) i [31:0] $end
$var integer 32 * j [31:0] $end
$scope module inst $end
$var wire 1 " carry $end
$var wire 1 & op1 $end
$var wire 1 ' op2 $end
$var wire 1 ( op3 $end
$var wire 1 + tempSum $end
$var wire 1 , t2carry $end
$var wire 1 - t1carry $end
$var wire 1 ! sum $end
$scope module inst1 $end
$var wire 1 & op1 $end
$var wire 1 ' op2 $end
$var reg 1 - carry $end
$var reg 1 + sum $end
$upscope $end
$scope module inst2 $end
$var wire 1 + op1 $end
$var wire 1 ( op2 $end
$var reg 1 , carry $end
$var reg 1 ! sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0-
0,
0+
b0 *
b0 )
0(
0'
0&
b10 %
b101 $
b11 #
0"
0!
$end
#2
1"
1-
1'
1&
#3
b1 )
#5
0"
1!
0-
1+
0'
#6
b10 )
#8
1'
0&
#9
b11 )
#11
0!
0+
0'
#12
b1 *
b0 )
#14
1"
1!
1-
1(
1'
1&
#15
b1 )
#17
1,
0!
0-
1+
0'
#18
b10 )
#20
1'
0&
#21
b11 )
#23
0"
0,
1!
0+
0'
#24
b10 *
b100 )
