$date
	Mon Oct 15 23:59:56 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module t_Reg32b $end
$var wire 32 ! data_out [0:31] $end
$var reg 1 " clk $end
$var reg 32 # data_in [0:31] $end
$var reg 1 $ res $end
$var integer 32 % i [31:0] $end
$scope module inst $end
$var wire 1 " clk $end
$var wire 32 & data_in [0:31] $end
$var wire 1 $ res $end
$var wire 32 ' data_out [0:31] $end
$scope module inst1 $end
$var wire 1 " clk $end
$var wire 1 ( d $end
$var wire 1 $ res $end
$var reg 1 ) q $end
$upscope $end
$scope module inst10 $end
$var wire 1 " clk $end
$var wire 1 * d $end
$var wire 1 $ res $end
$var reg 1 + q $end
$upscope $end
$scope module inst11 $end
$var wire 1 " clk $end
$var wire 1 , d $end
$var wire 1 $ res $end
$var reg 1 - q $end
$upscope $end
$scope module inst12 $end
$var wire 1 " clk $end
$var wire 1 . d $end
$var wire 1 $ res $end
$var reg 1 / q $end
$upscope $end
$scope module inst13 $end
$var wire 1 " clk $end
$var wire 1 0 d $end
$var wire 1 $ res $end
$var reg 1 1 q $end
$upscope $end
$scope module inst14 $end
$var wire 1 " clk $end
$var wire 1 2 d $end
$var wire 1 $ res $end
$var reg 1 3 q $end
$upscope $end
$scope module inst15 $end
$var wire 1 " clk $end
$var wire 1 4 d $end
$var wire 1 $ res $end
$var reg 1 5 q $end
$upscope $end
$scope module inst16 $end
$var wire 1 " clk $end
$var wire 1 6 d $end
$var wire 1 $ res $end
$var reg 1 7 q $end
$upscope $end
$scope module inst17 $end
$var wire 1 " clk $end
$var wire 1 8 d $end
$var wire 1 $ res $end
$var reg 1 9 q $end
$upscope $end
$scope module inst18 $end
$var wire 1 " clk $end
$var wire 1 : d $end
$var wire 1 $ res $end
$var reg 1 ; q $end
$upscope $end
$scope module inst19 $end
$var wire 1 " clk $end
$var wire 1 < d $end
$var wire 1 $ res $end
$var reg 1 = q $end
$upscope $end
$scope module inst2 $end
$var wire 1 " clk $end
$var wire 1 > d $end
$var wire 1 $ res $end
$var reg 1 ? q $end
$upscope $end
$scope module inst20 $end
$var wire 1 " clk $end
$var wire 1 @ d $end
$var wire 1 $ res $end
$var reg 1 A q $end
$upscope $end
$scope module inst21 $end
$var wire 1 " clk $end
$var wire 1 B d $end
$var wire 1 $ res $end
$var reg 1 C q $end
$upscope $end
$scope module inst22 $end
$var wire 1 " clk $end
$var wire 1 D d $end
$var wire 1 $ res $end
$var reg 1 E q $end
$upscope $end
$scope module inst23 $end
$var wire 1 " clk $end
$var wire 1 F d $end
$var wire 1 $ res $end
$var reg 1 G q $end
$upscope $end
$scope module inst24 $end
$var wire 1 " clk $end
$var wire 1 H d $end
$var wire 1 $ res $end
$var reg 1 I q $end
$upscope $end
$scope module inst25 $end
$var wire 1 " clk $end
$var wire 1 J d $end
$var wire 1 $ res $end
$var reg 1 K q $end
$upscope $end
$scope module inst26 $end
$var wire 1 " clk $end
$var wire 1 L d $end
$var wire 1 $ res $end
$var reg 1 M q $end
$upscope $end
$scope module inst27 $end
$var wire 1 " clk $end
$var wire 1 N d $end
$var wire 1 $ res $end
$var reg 1 O q $end
$upscope $end
$scope module inst28 $end
$var wire 1 " clk $end
$var wire 1 P d $end
$var wire 1 $ res $end
$var reg 1 Q q $end
$upscope $end
$scope module inst29 $end
$var wire 1 " clk $end
$var wire 1 R d $end
$var wire 1 $ res $end
$var reg 1 S q $end
$upscope $end
$scope module inst3 $end
$var wire 1 " clk $end
$var wire 1 T d $end
$var wire 1 $ res $end
$var reg 1 U q $end
$upscope $end
$scope module inst30 $end
$var wire 1 " clk $end
$var wire 1 V d $end
$var wire 1 $ res $end
$var reg 1 W q $end
$upscope $end
$scope module inst31 $end
$var wire 1 " clk $end
$var wire 1 X d $end
$var wire 1 $ res $end
$var reg 1 Y q $end
$upscope $end
$scope module inst32 $end
$var wire 1 " clk $end
$var wire 1 Z d $end
$var wire 1 $ res $end
$var reg 1 [ q $end
$upscope $end
$scope module inst4 $end
$var wire 1 " clk $end
$var wire 1 \ d $end
$var wire 1 $ res $end
$var reg 1 ] q $end
$upscope $end
$scope module inst5 $end
$var wire 1 " clk $end
$var wire 1 ^ d $end
$var wire 1 $ res $end
$var reg 1 _ q $end
$upscope $end
$scope module inst6 $end
$var wire 1 " clk $end
$var wire 1 ` d $end
$var wire 1 $ res $end
$var reg 1 a q $end
$upscope $end
$scope module inst7 $end
$var wire 1 " clk $end
$var wire 1 b d $end
$var wire 1 $ res $end
$var reg 1 c q $end
$upscope $end
$scope module inst8 $end
$var wire 1 " clk $end
$var wire 1 d d $end
$var wire 1 $ res $end
$var reg 1 e q $end
$upscope $end
$scope module inst9 $end
$var wire 1 " clk $end
$var wire 1 f d $end
$var wire 1 $ res $end
$var reg 1 g q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xg
0f
xe
0d
xc
0b
xa
0`
x_
0^
x]
0\
x[
1Z
xY
1X
xW
1V
xU
0T
xS
0R
xQ
0P
xO
0N
xM
0L
xK
0J
xI
0H
xG
0F
xE
0D
xC
0B
xA
0@
x?
0>
x=
0<
x;
0:
x9
08
x7
06
x5
04
x3
02
x1
00
x/
0.
x-
0,
x+
0*
x)
0(
bx '
b111 &
b1 %
1$
b111 #
0"
bx !
$end
#5
0)
0?
0U
0]
0_
0a
0c
0e
0g
0+
0-
0/
01
03
05
07
09
0;
0=
0A
0C
0E
0G
0I
0K
0M
0O
0Q
0S
1W
1Y
b111 !
b111 '
1[
1"
#6
1R
0V
0X
0Z
b10 %
b1000 #
b1000 &
#10
0"
#12
1Z
b11 %
b1001 #
b1001 &
#15
0Y
0W
b1001 !
b1001 '
1S
1"
#18
1X
0Z
b100 %
b1010 #
b1010 &
#20
0"
#24
1Z
b101 %
b1011 #
b1011 &
#25
b1011 !
b1011 '
1Y
1"
#30
1V
0X
0Z
0"
b110 %
b1100 #
b1100 &
#34
0$
#35
0[
0Y
b0 !
b0 '
0S
1"
#36
1Z
b111 %
b1101 #
b1101 &
#40
0"
#42
1X
0Z
b1000 %
b1110 #
b1110 &
#44
1$
#45
1S
1W
b1110 !
b1110 '
1Y
1"
#48
1Z
b1001 %
b1111 #
b1111 &
#50
0"
#54
1P
0R
0V
0X
0Z
b1010 %
b10000 #
b10000 &
#55
0Y
0W
0S
b10000 !
b10000 '
1Q
1"
#60
1Z
0"
b1011 %
b10001 #
b10001 &
#65
b10001 !
b10001 '
1[
1"
#66
1X
0Z
b1100 %
b10010 #
b10010 &
#70
0"
#72
1Z
b1101 %
b10011 #
b10011 &
#75
b10011 !
b10011 '
1Y
1"
#78
1V
0X
0Z
b1110 %
b10100 #
b10100 &
#80
0"
#84
1Z
b1111 %
b10101 #
b10101 &
#85
1W
b10101 !
b10101 '
0Y
1"
#90
1X
0Z
0"
b10000 %
b10110 #
b10110 &
#95
0[
b10110 !
b10110 '
1Y
1"
#96
1Z
b10001 %
b10111 #
b10111 &
#100
0"
#102
1R
0V
0X
0Z
b10010 %
b11000 #
b11000 &
#105
1S
0W
b11000 !
b11000 '
0Y
1"
#108
1Z
b10011 %
b11001 #
b11001 &
#110
0"
#114
1X
0Z
b10100 %
b11010 #
b11010 &
#115
b11010 !
b11010 '
1Y
1"
#120
1Z
0"
b10101 %
b11011 #
b11011 &
#125
b11011 !
b11011 '
1[
1"
#130
0"
#135
1"
#140
0"
#145
1"
#150
0"
