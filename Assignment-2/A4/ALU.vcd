$date
	Fri Oct 26 00:31:59 2018
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_ALU $end
$var wire 1 ! Zero $end
$var wire 64 " Result [63:0] $end
$var wire 4 # Op [3:0] $end
$var wire 1 $ CarryOut $end
$var reg 64 % A [63:0] $end
$var reg 2 & ALU_Op [1:0] $end
$var reg 64 ' B [63:0] $end
$var reg 1 ( CarryIn $end
$var reg 3 ) funct3 [2:0] $end
$var reg 7 * funct7 [6:0] $end
$var integer 32 + i [31:0] $end
$var integer 32 , j [31:0] $end
$scope module alu1 $end
$var wire 64 - A [63:0] $end
$var wire 64 . B [63:0] $end
$var wire 1 ( CarryIn $end
$var wire 4 / Op [3:0] $end
$var reg 1 $ CarryOut $end
$var reg 64 0 Result [63:0] $end
$var reg 1 ! Zero $end
$var reg 64 1 a [63:0] $end
$var reg 64 2 b [63:0] $end
$var integer 32 3 i [31:0] $end
$upscope $end
$scope module inst $end
$var wire 2 4 ALU_Op [1:0] $end
$var wire 3 5 funct3 [2:0] $end
$var wire 7 6 funct7 [6:0] $end
$var wire 4 7 Op [3:0] $end
$var wire 1 8 F3 $end
$var wire 1 9 F2 $end
$var wire 1 : F1 $end
$var wire 1 ; F0 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x;
x:
x9
x8
b0xxx 7
bx 6
bx 5
bx 4
b1000000 3
bx 2
b1 1
bx 0
b0xxx /
b1111111111111111111111111111111111111111111111111111111111111111 .
b1 -
b0 ,
bx +
bx *
bx )
x(
b1111111111111111111111111111111111111111111111111111111111111111 '
bx &
b1 %
x$
b0xxx #
bx "
x!
$end
#1
b0 +
#20
1!
1$
b0 "
b0 0
b1111111111111111111111111111111111111111111111111111111111111111 2
b1000000 3
b10 #
b10 /
b10 7
1;
1:
19
18
b111 )
b111 5
b100111 *
b100111 6
b0 &
b0 4
#21
b1 +
#40
0!
0$
b10 "
b10 0
b0 2
b110 #
b110 /
b110 7
08
b1000000 3
b0 *
b0 6
0(
b1 &
b1 4
#41
b10 +
#60
1!
1$
b0 "
b0 0
b1111111111111111111111111111111111111111111111111111111111111111 2
b10 #
b10 /
b10 7
0;
0:
09
b1000000 3
b0 )
b0 5
1(
b10 &
b10 4
#61
b11 +
#80
0!
0$
b10 "
b10 0
b0 2
b110 #
b110 /
b110 7
18
b1000000 3
b100000 *
b100000 6
0(
#81
b100 +
#100
b1111111111111111111111111111111111111111111111111111111111111111 2
0!
b1 "
b1 0
b0 #
b0 /
b0 7
1;
1:
19
08
b1000000 3
b111 )
b111 5
b0 *
b0 6
1(
#101
b101 +
#120
b111111111111111111111111111111111111111111111111111111111111111 "
b111111111111111111111111111111111111111111111111111111111111111 0
b1 #
b1 /
b1 7
0;
b1 2
b111111111111111111111111111111111111111111111111111111111111111 1
b1000000 3
b1 ,
b110 )
b110 5
0(
b1 '
b1 .
b111111111111111111111111111111111111111111111111111111111111111 %
b111111111111111111111111111111111111111111111111111111111111111 -
#121
b110 +
#140
b1000000000000000000000000000000000000000000000000000000000000000 "
b1000000000000000000000000000000000000000000000000000000000000000 0
b1000000 3
b10 #
b10 /
b10 7
1;
18
b111 )
b111 5
b100111 *
b100111 6
b0 &
b0 4
#141
b111 +
#160
1$
b111111111111111111111111111111111111111111111111111111111111110 "
b111111111111111111111111111111111111111111111111111111111111110 0
b1111111111111111111111111111111111111111111111111111111111111110 2
b1000000 3
b110 #
b110 /
b110 7
08
b0 *
b0 6
b1 &
b1 4
#161
b1000 +
#180
0$
b1000000000000000000000000000000000000000000000000000000000000000 "
b1000000000000000000000000000000000000000000000000000000000000000 0
b1 2
b10 #
b10 /
b10 7
0;
0:
09
b1000000 3
b0 )
b0 5
1(
b10 &
b10 4
#181
b1001 +
#200
1$
b111111111111111111111111111111111111111111111111111111111111110 "
b111111111111111111111111111111111111111111111111111111111111110 0
b1111111111111111111111111111111111111111111111111111111111111110 2
b110 #
b110 /
b110 7
18
b1000000 3
b100000 *
b100000 6
0(
#201
b1010 +
#220
b1 "
b1 0
b1 2
b0 #
b0 /
b0 7
1;
1:
19
08
b1000000 3
b111 )
b111 5
b0 *
b0 6
1(
#221
b1011 +
#240
b1 #
b1 /
b1 7
0;
0!
b1111111111111111111111111111111111111111111111111111111111111111 "
b1111111111111111111111111111111111111111111111111111111111111111 0
b1000000000000000000000000000000000000000000000000000000000000000 2
b1000000 3
b10 ,
b110 )
b110 5
0(
b1000000000000000000000000000000000000000000000000000000000000000 '
b1000000000000000000000000000000000000000000000000000000000000000 .
#241
b1100 +
#260
0$
b1000000 3
b10 #
b10 /
b10 7
1;
18
b111 )
b111 5
b100111 *
b100111 6
b0 &
b0 4
#261
b1101 +
#280
b111111111111111111111111111111111111111111111111111111111111111 2
b1000000 3
b110 #
b110 /
b110 7
08
b0 *
b0 6
b1 &
b1 4
#281
b1110 +
#300
b1000000000000000000000000000000000000000000000000000000000000000 2
b10 #
b10 /
b10 7
0;
0:
09
b1000000 3
b0 )
b0 5
1(
b10 &
b10 4
#301
b1111 +
#320
b111111111111111111111111111111111111111111111111111111111111111 2
b110 #
b110 /
b110 7
18
b1000000 3
b100000 *
b100000 6
0(
#321
b10000 +
#340
1!
b1000000000000000000000000000000000000000000000000000000000000000 2
b0 "
b0 0
b0 #
b0 /
b0 7
1;
1:
19
08
b1000000 3
b111 )
b111 5
b0 *
b0 6
1(
#341
b10001 +
#360
b1 #
b1 /
b1 7
0;
b0 2
b0 1
b1000000 3
b11 ,
b110 )
b110 5
0(
b0 '
b0 .
b0 %
b0 -
#361
b10010 +
#380
b1000000 3
b10 #
b10 /
b10 7
1;
18
b111 )
b111 5
b100111 *
b100111 6
b0 &
b0 4
#381
b10011 +
#400
1$
b1111111111111111111111111111111111111111111111111111111111111111 2
b1000000 3
b110 #
b110 /
b110 7
08
b0 *
b0 6
b1 &
b1 4
#401
b10100 +
#420
0$
b0 2
b10 #
b10 /
b10 7
0;
0:
09
b1000000 3
b0 )
b0 5
1(
b10 &
b10 4
#421
b10101 +
#440
1$
b1111111111111111111111111111111111111111111111111111111111111111 2
b110 #
b110 /
b110 7
18
b1000000 3
b100000 *
b100000 6
0(
#441
b10110 +
#460
b0 2
b0 #
b0 /
b0 7
1;
1:
19
08
b1000000 3
b111 )
b111 5
b0 *
b0 6
1(
#461
b10111 +
#480
b1 #
b1 /
b1 7
0;
b1000000 3
b100 ,
b110 )
b110 5
0(
#481
b11000 +
